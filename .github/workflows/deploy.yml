name: Deploy Astro site

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

permissions:
  contents: read

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

env:
  BUILD_PATH: "." # default value when not using subfolders
  # BUILD_PATH: subfolder
  BUILD_SITE_URL: "https://blog.yixuan-wang.site"
  BUILD_SITE_BASE: "/"

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - uses: pnpm/action-setup@v2
        name: Install pnpm
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install
        working-directory: ${{ env.BUILD_PATH }}

      - name: Build with Astro
        run: |
          pnpm run build \
            --site "${{ env.BUILD_SITE_URL }}" \
            --base "${{ env.BUILD_SITE_BASE }}"
        working-directory: ${{ env.BUILD_PATH }}

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: am-build
          path: ./dist

  deploy:
    needs: build
    runs-on: ubuntu-latest
    name: Deploy
    steps:
      - name: Donwload Artifact
        uses: actions/download-artifact@v3
        with:
          name: am-build
          path: ./dist

      - name: Deploy Server
        uses: burnett01/rsync-deployments@5.2.1
        with:
          switches: -avzr --delete
          path: dist/.
          remote_path: ${{ secrets.DEPLOY_TARGET }}
          remote_host: ${{ secrets.DEPLOY_HOST }}
          remote_user: github
          remote_key: ${{ secrets.DEPLOY_SSH_PRIVATE_KEY }}
